// This file was generated by running 'ng generate @angular/material:theme-color'.
// Proceed with caution if making changes to this file.

@use "sass:map";
@use "@angular/material" as mat;

// Note: Color palettes are generated from primary: #4a209b
$_palettes: (
  primary: (
    0: theme("colors.primary.0"),
    10: theme("colors.primary.10"),
    20: theme("colors.primary.20"),
    25: theme("colors.primary.25"),
    30: theme("colors.primary.30"),
    35: theme("colors.primary.35"),
    40: theme("colors.primary.40"),
    50: theme("colors.primary.50"),
    60: theme("colors.primary.60"),
    70: theme("colors.primary.70"),
    80: theme("colors.primary.80"),
    90: theme("colors.primary.90"),
    95: theme("colors.primary.95"),
    98: theme("colors.primary.98"),
    99: theme("colors.primary.99"),
    100: theme("colors.primary.100"),
  ),
  secondary: (
    0: theme("colors.secondary.0"),
    10: theme("colors.secondary.10"),
    20: theme("colors.secondary.20"),
    25: theme("colors.secondary.25"),
    30: theme("colors.secondary.30"),
    35: theme("colors.secondary.35"),
    40: theme("colors.secondary.40"),
    50: theme("colors.secondary.50"),
    60: theme("colors.secondary.60"),
    70: theme("colors.secondary.70"),
    80: theme("colors.secondary.80"),
    90: theme("colors.secondary.90"),
    95: theme("colors.secondary.95"),
    98: theme("colors.secondary.98"),
    99: theme("colors.secondary.99"),
    100: theme("colors.secondary.100"),
  ),
  tertiary: (
    0: theme("colors.tertiary.0"),
    10: theme("colors.tertiary.10"),
    20: theme("colors.tertiary.20"),
    25: theme("colors.tertiary.25"),
    30: theme("colors.tertiary.30"),
    35: theme("colors.tertiary.35"),
    40: theme("colors.tertiary.40"),
    50: theme("colors.tertiary.50"),
    60: theme("colors.tertiary.60"),
    70: theme("colors.tertiary.70"),
    80: theme("colors.tertiary.80"),
    90: theme("colors.tertiary.90"),
    95: theme("colors.tertiary.95"),
    98: theme("colors.tertiary.98"),
    99: theme("colors.tertiary.99"),
    100: theme("colors.tertiary.100"),
  ),
  neutral: (
    0: theme("colors.neutral.0"),
    10: theme("colors.neutral.10"),
    20: theme("colors.neutral.20"),
    25: theme("colors.neutral.25"),
    30: theme("colors.neutral.30"),
    35: theme("colors.neutral.35"),
    40: theme("colors.neutral.40"),
    50: theme("colors.neutral.50"),
    60: theme("colors.neutral.60"),
    70: theme("colors.neutral.70"),
    80: theme("colors.neutral.80"),
    90: theme("colors.neutral.90"),
    95: theme("colors.neutral.95"),
    98: theme("colors.neutral.98"),
    99: theme("colors.neutral.99"),
    100: theme("colors.neutral.100"),
    4: theme("colors.neutral.4"),
    6: theme("colors.neutral.6"),
    12: theme("colors.neutral.12"),
    17: theme("colors.neutral.17"),
    22: theme("colors.neutral.22"),
    24: theme("colors.neutral.24"),
    87: theme("colors.neutral.87"),
    92: theme("colors.neutral.92"),
    94: theme("colors.neutral.94"),
    96: theme("colors.neutral.96"),
  ),
  neutral-variant: (
    0: theme("colors.neutralVariant.0"),
    10: theme("colors.neutralVariant.10"),
    20: theme("colors.neutralVariant.20"),
    25: theme("colors.neutralVariant.25"),
    30: theme("colors.neutralVariant.30"),
    35: theme("colors.neutralVariant.35"),
    40: theme("colors.neutralVariant.40"),
    50: theme("colors.neutralVariant.50"),
    60: theme("colors.neutralVariant.60"),
    70: theme("colors.neutralVariant.70"),
    80: theme("colors.neutralVariant.80"),
    90: theme("colors.neutralVariant.90"),
    95: theme("colors.neutralVariant.95"),
    98: theme("colors.neutralVariant.98"),
    99: theme("colors.neutralVariant.99"),
    100: theme("colors.neutralVariant.100"),
  ),
  error: (
    0: theme("colors.error.0"),
    10: theme("colors.error.10"),
    20: theme("colors.error.20"),
    25: theme("colors.error.25"),
    30: theme("colors.error.30"),
    35: theme("colors.error.35"),
    40: theme("colors.error.40"),
    50: theme("colors.error.50"),
    60: theme("colors.error.60"),
    70: theme("colors.error.70"),
    80: theme("colors.error.80"),
    90: theme("colors.error.90"),
    95: theme("colors.error.95"),
    98: theme("colors.error.98"),
    99: theme("colors.error.99"),
    100: theme("colors.error.100"),
  ),
);

$_rest: (
  secondary: map.get($_palettes, secondary),
  neutral: map.get($_palettes, neutral),
  neutral-variant: map.get($_palettes, neutral-variant),
  error: map.get($_palettes, error),
);

$primary-palette: map.merge(map.get($_palettes, primary), $_rest);
$tertiary-palette: map.merge(map.get($_palettes, tertiary), $_rest);

// @function _high-contrast-value($light, $dark, $theme-type) {
//   @if ($theme-type == light) {
//     @return $light;
//   }
//   @if ($theme-type == dark) {
//     @return $dark;
//   }
//   @if ($theme-type == color-scheme) {
//     @return light-dark(#{$light}, #{$dark});
//   }

//   @error 'Unknown theme-type #{$theme-type}. Expected light, dark, or color-scheme';
// }

// TODO: provide colors using tailwind theme fn
// @mixin high-contrast-overrides($theme-type) {
//   @include mat.theme-overrides(
//     (
//       primary: _high-contrast-value(#33007d, #f5edff, $theme-type),
//       on-primary: _high-contrast-value(#ffffff, #000000, $theme-type),
//       primary-container: _high-contrast-value(#4a209b, #cdb7ff, $theme-type),
//       on-primary-container: _high-contrast-value(#ffffff, #100032, $theme-type),
//       inverse-primary: _high-contrast-value(#d0bcff, #542da5, $theme-type),
//       primary-fixed: _high-contrast-value(#552ea6, #e9ddff, $theme-type),
//       primary-fixed-dim: _high-contrast-value(#3e0b8f, #d0bcff, $theme-type),
//       on-primary-fixed: _high-contrast-value(#ffffff, #000000, $theme-type),
//       on-primary-fixed-variant: _high-contrast-value(
//           #ffffff,
//           #170041,
//           $theme-type
//         ),
//       secondary: _high-contrast-value(#312450, #f5edff, $theme-type),
//       on-secondary: _high-contrast-value(#ffffff, #000000, $theme-type),
//       secondary-container: _high-contrast-value(#4f426f, #cbbaf0, $theme-type),
//       on-secondary-container: _high-contrast-value(
//           #ffffff,
//           #0f022d,
//           $theme-type
//         ),
//       secondary-fixed: _high-contrast-value(#4f426f, #e9ddff, $theme-type),
//       secondary-fixed-dim: _high-contrast-value(#382b57, #cfbef4, $theme-type),
//       on-secondary-fixed: _high-contrast-value(#ffffff, #000000, $theme-type),
//       on-secondary-fixed-variant: _high-contrast-value(
//           #ffffff,
//           #150733,
//           $theme-type
//         ),
//       tertiary: _high-contrast-value(#500047, #ffebf5, $theme-type),
//       on-tertiary: _high-contrast-value(#ffffff, #000000, $theme-type),
//       tertiary-container: _high-contrast-value(#720e65, #ffa6e7, $theme-type),
//       on-tertiary-container: _high-contrast-value(#ffffff, #1e0019, $theme-type),
//       tertiary-fixed: _high-contrast-value(#801e71, #ffd7f0, $theme-type),
//       tertiary-fixed-dim: _high-contrast-value(#620057, #fface8, $theme-type),
//       on-tertiary-fixed: _high-contrast-value(#ffffff, #000000, $theme-type),
//       on-tertiary-fixed-variant: _high-contrast-value(
//           #ffffff,
//           #280022,
//           $theme-type
//         ),
//       background: _high-contrast-value(#fef7ff, #151219, $theme-type),
//       on-background: _high-contrast-value(#1d1a22, #e7e0eb, $theme-type),
//       surface: _high-contrast-value(#fef7ff, #151219, $theme-type),
//       surface-dim: _high-contrast-value(#bcb7c1, #151219, $theme-type),
//       surface-bright: _high-contrast-value(#fef7ff, #524e57, $theme-type),
//       surface-container-lowest: _high-contrast-value(
//           #ffffff,
//           #000000,
//           $theme-type
//         ),
//       surface-container: _high-contrast-value(#e7e0eb, #322f37, $theme-type),
//       surface-container-high: _high-contrast-value(
//           #d8d2dd,
//           #3d3a42,
//           $theme-type
//         ),
//       surface-container-highest: _high-contrast-value(
//           #cac4cf,
//           #49454e,
//           $theme-type
//         ),
//       on-surface: _high-contrast-value(#000000, #ffffff, $theme-type),
//       shadow: _high-contrast-value(#000000, #000000, $theme-type),
//       scrim: _high-contrast-value(#000000, #000000, $theme-type),
//       surface-tint: _high-contrast-value(#6b46bd, #d0bcff, $theme-type),
//       inverse-surface: _high-contrast-value(#322f37, #e7e0eb, $theme-type),
//       inverse-on-surface: _high-contrast-value(#ffffff, #000000, $theme-type),
//       outline: _high-contrast-value(#2e2a37, #f5edff, $theme-type),
//       outline-variant: _high-contrast-value(#4c4755, #c7bfd1, $theme-type),
//       error: _high-contrast-value(#600004, #ffece9, $theme-type),
//       on-error: _high-contrast-value(#ffffff, #000000, $theme-type),
//       error-container: _high-contrast-value(#98000a, #ffaea4, $theme-type),
//       on-error-container: _high-contrast-value(#ffffff, #220001, $theme-type),
//       surface-variant: _high-contrast-value(#e8dff1, #494452, $theme-type),
//       on-surface-variant: _high-contrast-value(#000000, #ffffff, $theme-type),
//     )
//   );
// }
